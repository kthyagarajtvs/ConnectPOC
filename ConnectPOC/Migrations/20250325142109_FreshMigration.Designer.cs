// <auto-generated />
using System;
using ConnectPOC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConnectPOC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250325142109_FreshMigration")]
    partial class FreshMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConnectPOC.Models.ApacheCumulative", b =>
                {
                    b.Property<long>("ApacheCumulativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ApacheCumulativeId"));

                    b.Property<decimal>("AnotherDataColumn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeAverageSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeBestShortestTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeMaxGforce")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeMaxLeanAngle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeTopSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("BikeTotalDrivenTime")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("FifthGearAvgRPM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FifthGearAvgSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FirstGearAvgRPM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FirstGearAvgSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FourthGearAvgRPM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FourthGearAvgSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("SecondGearAvgRPM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SecondGearAvgSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ThirdGearAvgRPM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ThirdGearAvgSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDistanceTravelled")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TotalRides")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserVehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("ApacheCumulativeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserVehicleId");

                    b.ToTable("ApacheCumulatives");
                });

            modelBuilder.Entity("ConnectPOC.Models.ApacheNONIOTCumulative", b =>
                {
                    b.Property<long>("ApacheCumulativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ApacheCumulativeId"));

                    b.Property<decimal?>("BikeAverageSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeBestShortestTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeMaxAltitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeMaxGforce")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeMaxLeanAngle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BikeTopSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("BikeTotalDrivenTime")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotalDistanceTravelled")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TotalRides")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserVehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("ApacheCumulativeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserVehicleId");

                    b.ToTable("ApacheNONIOTCumulative");
                });

            modelBuilder.Entity("ConnectPOC.Models.EmergencyContact", b =>
                {
                    b.Property<long>("EmergencyContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmergencyContactId"));

                    b.Property<string>("ContactImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("EmergencyContactId");

                    b.HasIndex("UserId");

                    b.ToTable("EmergencyContact");
                });

            modelBuilder.Entity("ConnectPOC.Models.HomeVideo", b =>
                {
                    b.Property<long>("VideoLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VideoLinkId"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoThumbnailLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoLinkId");

                    b.ToTable("HomeVideo");
                });

            modelBuilder.Entity("ConnectPOC.Models.N109Cumulative", b =>
                {
                    b.Property<long>("N109CumulativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("N109CumulativeId"));

                    b.Property<decimal?>("AverageSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BestShortestTime0to30")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CO2Saved")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EcoModeBatteryDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EcoModeEngineDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EcoModeTotalDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastBatteryStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastDistanceToEmpty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LastFuelStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("PowerModeCombinedBEDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PowerModeOnlyEngDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PowerModeTotalDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("RideTime")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TopSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TotalTime")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalTravelledDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Totalrides")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserVehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("N109CumulativeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserVehicleId");

                    b.ToTable("N109Cumulatives");
                });

            modelBuilder.Entity("ConnectPOC.Models.N251BLECumulative", b =>
                {
                    b.Property<long>("N251BLECumulativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("N251BLECumulativeId"));

                    b.Property<decimal?>("AverageSpeedOverAll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AverageSpeedRaceMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AverageSpeedSportMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AverageSpeedStreetMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Best0to60RaceMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Best0to60StreetMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BestShortestTimeSportMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("IdleTime")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LapDistanceSportMode")
                        .HasColumnType("bigint");

                    b.Property<int?>("LastFuelStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("OdometerReading")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("RaceModeRides")
                        .HasColumnType("bigint");

                    b.Property<long?>("RideTime")
                        .HasColumnType("bigint");

                    b.Property<long?>("RideTimeRaceMode")
                        .HasColumnType("bigint");

                    b.Property<long?>("RideTimeStreetMode")
                        .HasColumnType("bigint");

                    b.Property<long?>("SportModeRides")
                        .HasColumnType("bigint");

                    b.Property<long?>("StreetModeRides")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopRPM")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopRPMRaceMode")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopRPMStreetMode")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopSpeedOverAll")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopSpeedRaceMode")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopSpeedSportMode")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopSpeedStreetMode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalDistanceOverAll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDistanceRaceMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDistanceSportMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDistanceStreetMode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TotalRides")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalTime")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserVehicleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("N251BLECumulativeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserVehicleId");

                    b.ToTable("N251BLECumulative");
                });

            modelBuilder.Entity("ConnectPOC.Models.RideCumulative", b =>
                {
                    b.Property<long>("RideCumulativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RideCumulativeId"));

                    b.Property<string>("ACTIVE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AverageMileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AverageSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BRAND_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRAND_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<string>("COLOR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONNECTED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONTACT_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONTACT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CumulativeFeOverall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DEALER_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMP_MODEL_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMP_PART_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAIL_ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENGINE_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EcoModeDistanceOverall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("EcoModeDurationOverall")
                        .HasColumnType("bigint");

                    b.Property<string>("FRAME_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IOT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("LAST_SERVICE_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_SERVICE_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnGoingBooking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRideParameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PowerModeDistanceOverall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("PowerModeDurationOverall")
                        .HasColumnType("bigint");

                    b.Property<string>("REG_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RideTime")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SALE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("SERIES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SelectedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TOV_MODEL_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TOV_PART_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Theme")
                        .HasColumnType("int");

                    b.Property<decimal?>("TopSpeed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TotalRides")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalTime")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalTravelledDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserVehicleId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VehicleTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("RideCumulativeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserVehicleId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("RideCumulative");
                });

            modelBuilder.Entity("ConnectPOC.Models.U347Cumulative", b =>
                {
                    b.Property<long>("U347CumulativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("U347CumulativeId"));

                    b.Property<long?>("AverageSpeed")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("BestShortestTime0to30")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CO2Saved")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EcoModeTotalDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LastBatteryStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("LstDistanceToEmpty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PowerModeTotalDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("RideTime")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalRides")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalTime")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalTravelledDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserVehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("U347CumulativeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserVehicleId");

                    b.ToTable("U347Cumulative");
                });

            modelBuilder.Entity("ConnectPOC.Models.UserProfile", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("AllergicContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AndroidToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BillingCityId")
                        .HasColumnType("bigint");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CrashAlertDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeleteOTP")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeleteOTPGenerateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteReasonMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("EmergencyNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyNumber3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExistingICENumber")
                        .HasColumnType("bigint");

                    b.Property<string>("FacebookId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GooglePlusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IosToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleteOTPVerified")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMasked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMigrated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOTPVerified")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMobChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastOTPFailedAttemptAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MigrationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobChangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobChangeStatusMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OTPFailedAttemptCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OTPGenerateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OTPGeneratedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OTPHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("ConnectPOC.Models.UserVehicle", b =>
                {
                    b.Property<long>("UserVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserVehicleId"));

                    b.Property<string>("ACTIVE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRAND_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRAND_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BookingId")
                        .HasColumnType("bigint");

                    b.Property<string>("COLOR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONNECTED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONTACT_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONTACT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUSTOMER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEALER_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMP_MODEL_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DMP_PART_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAIL_ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ENGINE_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FRAME_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IOT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("LAST_SERVICE_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_SERVICE_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnGoingBooking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REG_NO")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("SALE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SelectedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TOV_MODEL_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TOV_PART_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Theme")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VehicleTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserVehicleId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("UserVehicles");
                });

            modelBuilder.Entity("ConnectPOC.Models.VehicleType", b =>
                {
                    b.Property<long>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VehicleTypeId"));

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Series")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("ConnectPOC.Models.ApacheCumulative", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany("ApacheCumulatives")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectPOC.Models.UserVehicle", "UserVehicle")
                        .WithMany("ApacheCumulatives")
                        .HasForeignKey("UserVehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("UserVehicle");
                });

            modelBuilder.Entity("ConnectPOC.Models.ApacheNONIOTCumulative", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany("ApacheNONIOTCumulative")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConnectPOC.Models.UserVehicle", "UserVehicle")
                        .WithMany("ApacheNONIOTCumulative")
                        .HasForeignKey("UserVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UserProfile");

                    b.Navigation("UserVehicle");
                });

            modelBuilder.Entity("ConnectPOC.Models.EmergencyContact", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("ConnectPOC.Models.N109Cumulative", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany("N109Cumulatives")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectPOC.Models.UserVehicle", "UserVehicle")
                        .WithMany("N109Cumulatives")
                        .HasForeignKey("UserVehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("UserVehicle");
                });

            modelBuilder.Entity("ConnectPOC.Models.N251BLECumulative", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany("N251BLECumulative")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectPOC.Models.UserVehicle", "UserVehicle")
                        .WithMany("N251BLECumulative")
                        .HasForeignKey("UserVehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("UserVehicle");
                });

            modelBuilder.Entity("ConnectPOC.Models.RideCumulative", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany("RideCumulative")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectPOC.Models.UserVehicle", "UserVehicle")
                        .WithMany("RideCumulative")
                        .HasForeignKey("UserVehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConnectPOC.Models.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("UserVehicle");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("ConnectPOC.Models.U347Cumulative", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany("U347Cumulative")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConnectPOC.Models.UserVehicle", "UserVehicle")
                        .WithMany("U347Cumulative")
                        .HasForeignKey("UserVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UserProfile");

                    b.Navigation("UserVehicle");
                });

            modelBuilder.Entity("ConnectPOC.Models.UserVehicle", b =>
                {
                    b.HasOne("ConnectPOC.Models.UserProfile", "UserProfile")
                        .WithMany("UserVehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConnectPOC.Models.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("ConnectPOC.Models.UserProfile", b =>
                {
                    b.Navigation("ApacheCumulatives");

                    b.Navigation("ApacheNONIOTCumulative");

                    b.Navigation("N109Cumulatives");

                    b.Navigation("N251BLECumulative");

                    b.Navigation("RideCumulative");

                    b.Navigation("U347Cumulative");

                    b.Navigation("UserVehicles");
                });

            modelBuilder.Entity("ConnectPOC.Models.UserVehicle", b =>
                {
                    b.Navigation("ApacheCumulatives");

                    b.Navigation("ApacheNONIOTCumulative");

                    b.Navigation("N109Cumulatives");

                    b.Navigation("N251BLECumulative");

                    b.Navigation("RideCumulative");

                    b.Navigation("U347Cumulative");
                });
#pragma warning restore 612, 618
        }
    }
}
